name: Lambda Layer

on:
  push:
    tags: [ 'v*.*.*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: ${{ matrix.architecture }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build the Docker image
      run: |
        docker buildx build --platform linux/${{ matrix.architecture }} --load --file Dockerfile --tag mssql-lambda-${{ matrix.architecture }} .

    - name: Create Container from Image
      run: |
        docker run --rm --volume $(pwd):/tmp mssql-lambda-${{ matrix.architecture }} cp /layer.zip /tmp/pyodbc-mssql-python312-${{ matrix.architecture }}.zip

    - name: Upload layer artifact
      uses: actions/upload-artifact@v4
      with:
        name: pyodbc-mssql-python312-${{ matrix.architecture }}.zip
        path: pyodbc-mssql-python312-${{ matrix.architecture }}.zip

    - name: Create release
      if: matrix.architecture == 'amd64'
      uses: ncipollo/release-action@v1
      with:
        artifacts: pyodbc-mssql-python312-amd64.zip
        token: ${{ secrets.GITHUB_TOKEN }}
